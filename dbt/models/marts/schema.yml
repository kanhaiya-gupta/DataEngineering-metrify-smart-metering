version: 2

models:
  - name: fct_smart_meter_analytics
    description: "Fact table for smart meter analytics"
    columns:
      - name: meter_id
        description: "Unique identifier for the smart meter"
        tests:
          - not_null
      - name: date_hour
        description: "Hour timestamp for the analytics"
        tests:
          - not_null
      - name: total_consumption_kwh
        description: "Total consumption in kWh for the hour"
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 1000
      - name: reading_count
        description: "Number of readings in the hour"
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 60
      - name: avg_consumption_kwh
        description: "Average consumption in kWh for the hour"
        tests:
          - not_null
      - name: excellent_quality_percent
        description: "Percentage of excellent quality readings"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 100
      - name: anomaly_percent
        description: "Percentage of anomalous readings"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 100
      - name: consumption_category
        description: "Consumption category classification"
        tests:
          - accepted_values:
              values: ['ZERO_CONSUMPTION', 'VERY_LOW', 'LOW', 'MEDIUM', 'HIGH', 'VERY_HIGH']
      - name: overall_quality_tier
        description: "Overall quality tier for the hour"
        tests:
          - accepted_values:
              values: ['EXCELLENT', 'GOOD', 'FAIR', 'POOR']
      - name: anomaly_classification
        description: "Anomaly classification for the hour"
        tests:
          - accepted_values:
              values: ['HIGH_ANOMALY', 'MEDIUM_ANOMALY', 'LOW_ANOMALY', 'NO_ANOMALY']
      - name: time_period_classification
        description: "Time period classification"
        tests:
          - accepted_values:
              values: ['PEAK_WEEKDAY', 'PEAK_WEEKEND', 'OFF_PEAK_WEEKDAY', 'OFF_PEAK_WEEKEND', 'OTHER']
  
  - name: dim_meters
    description: "Dimension table for smart meters"
    columns:
      - name: meter_id
        description: "Unique identifier for the smart meter"
        tests:
          - not_null
          - unique
      - name: meter_address
        description: "Address of the smart meter"
        tests:
          - not_null
      - name: latitude
        description: "Latitude of the meter location"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -90
              max_value: 90
      - name: longitude
        description: "Longitude of the meter location"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -180
              max_value: 180
      - name: tariff_type
        description: "Tariff type for the meter"
        tests:
          - not_null
      - name: total_readings
        description: "Total number of readings for the meter"
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
      - name: avg_consumption_kwh
        description: "Average consumption in kWh"
        tests:
          - not_null
      - name: avg_quality_score
        description: "Average quality score"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 100
      - name: overall_quality_tier
        description: "Overall quality tier for the meter"
        tests:
          - accepted_values:
              values: ['EXCELLENT', 'GOOD', 'FAIR', 'POOR']
      - name: anomaly_classification
        description: "Anomaly classification for the meter"
        tests:
          - accepted_values:
              values: ['HIGH_ANOMALY', 'MEDIUM_ANOMALY', 'LOW_ANOMALY', 'NO_ANOMALY']
      - name: consumption_tier
        description: "Consumption tier classification"
        tests:
          - accepted_values:
              values: ['ZERO_CONSUMPTION', 'VERY_LOW', 'LOW', 'MEDIUM', 'HIGH', 'VERY_HIGH']
      - name: meter_status
        description: "Current status of the meter"
        tests:
          - accepted_values:
              values: ['ACTIVE', 'INACTIVE', 'FAULTY', 'NEEDS_MAINTENANCE']
      - name: geographic_region
        description: "Geographic region of the meter"
        tests:
          - accepted_values:
              values: ['UNKNOWN', 'NORTH_EAST', 'NORTH_WEST', 'SOUTH_EAST', 'SOUTH_WEST']
  
  - name: dim_grid_operators
    description: "Dimension table for grid operators"
    columns:
      - name: operator_id
        description: "Unique identifier for the grid operator"
        tests:
          - not_null
          - unique
      - name: grid_region
        description: "Grid region for the operator"
        tests:
          - not_null
      - name: substation_id
        description: "Substation identifier"
        tests:
          - not_null
      - name: control_area
        description: "Control area for the operator"
        tests:
          - not_null
      - name: total_status_updates
        description: "Total number of status updates"
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
      - name: avg_frequency_hz
        description: "Average grid frequency in Hz"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 45
              max_value: 65
      - name: avg_voltage_kv
        description: "Average grid voltage in kV"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 100
              max_value: 500
      - name: stability_percent
        description: "Percentage of stable status updates"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 100
      - name: stability_classification
        description: "Stability classification"
        tests:
          - accepted_values:
              values: ['VERY_STABLE', 'STABLE', 'MODERATELY_STABLE', 'UNSTABLE', 'VERY_UNSTABLE']
      - name: risk_classification
        description: "Risk classification"
        tests:
          - accepted_values:
              values: ['HIGH_RISK', 'MEDIUM_RISK', 'LOW_RISK']
      - name: operator_status
        description: "Current status of the operator"
        tests:
          - accepted_values:
              values: ['ACTIVE', 'INACTIVE', 'EMERGENCY', 'OVERLOADED', 'UNSTABLE']
  
  - name: dim_weather_stations
    description: "Dimension table for weather stations"
    columns:
      - name: station_id
        description: "Unique identifier for the weather station"
        tests:
          - not_null
          - unique
      - name: latitude
        description: "Latitude of the station location"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -90
              max_value: 90
      - name: longitude
        description: "Longitude of the station location"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -180
              max_value: 180
      - name: elevation_m
        description: "Elevation in meters"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -100
              max_value: 10000
      - name: station_address
        description: "Address of the weather station"
        tests:
          - not_null
      - name: weather_station_type
        description: "Type of weather station"
        tests:
          - not_null
      - name: total_observations
        description: "Total number of observations"
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
      - name: avg_temperature_celsius
        description: "Average temperature in Celsius"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -50
              max_value: 60
      - name: avg_humidity_percent
        description: "Average humidity percentage"
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 100
      - name: temperature_classification
        description: "Temperature classification"
        tests:
          - accepted_values:
              values: ['UNKNOWN', 'VERY_COLD', 'COLD', 'COOL', 'MILD', 'WARM', 'HOT', 'VERY_HOT']
      - name: humidity_classification
        description: "Humidity classification"
        tests:
          - accepted_values:
              values: ['UNKNOWN', 'DRY', 'COMFORTABLE', 'MODERATE', 'HUMID']
      - name: station_status
        description: "Current status of the station"
        tests:
          - accepted_values:
              values: ['ACTIVE', 'INACTIVE', 'FAULTY', 'LOW_ACTIVITY']
      - name: geographic_region
        description: "Geographic region of the station"
        tests:
          - accepted_values:
              values: ['UNKNOWN', 'NORTH_EAST', 'NORTH_WEST', 'SOUTH_EAST', 'SOUTH_WEST']
